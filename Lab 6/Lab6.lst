---------------------------------------------
PIC ASSEMBLER LISTING
Line    Address Opcode  Instruction
---------------------------------------------
0001    0000            	                      ;  CONFIGURACI?N
0002    0000            	DATO EQU 0x20
0003    0000            	aux EQU 0x30
0004    0000            	OPERACION EQU 0x29
0005    0000            		; var Numero1 =0; asignando espacio de memoria
0006    0000            	NUMERO1 EQU 0x21
0007    0000            	NUMERO2 EQU 0x22
0008    0000            	ESTADO EQU 0x03
0009    0000            	RESULTADO EQU 0x31
0010    0000            	DelayNum EQU 0x35
0011    0000            	                      ;  INICIO DE PROGRAMA
0012    0000            	ORG 0X00
0013    0000    2801    	GOTO START
0014    0001            
0015    0001            	                      ;  CODIGO
0016    0001            START
0017    0001            	                      ;  Nos Movemos a banco 1 -> status 01
0018    0001    1683    	BSF STATUS,5
0019    0002    0187    	CLRF TRISC
0020    0003            		;seteale un  TRISx [0] = 1
0021    0003    1407    	BSF TRISC,0           ;  ENTRADA SAVE
0022    0004    1487    	BSF TRISC,1           ;  ENTRAdA para Agregar Numero
0023    0005    0185    	CLRF TRISA
0024    0006    1405    	BSF TRISA,0             ;  B TODOS SON SALIDA
0025    0007    0186    	CLRF TRISB           ;  C TODOS SON SALIDA
0026    0008    0188    	CLRF TRISD            ;  D TODOS SON SALIDA
0027    0009            	                      ;  limpiamos rp0, moviendonos al banco 0
0028    0009    1283    	BCF STATUS,5
0029    000A            	                      ;  seteamos todos los leds a 0 en el inicio
0030    000A    3000    	MOVLW 0
0031    000B    0086    	MOVWF PORTB
0032    000C    0087    	MOVWF PORTC
0033    000D    0088    	MOVWF PORTD
0034    000E            
0035    000E    280F    	GOTO MENU
0036    000F            
0037    000F            MENU
0038    000F            
0039    000F            		;Pedimos el primer numero
0040    000F    2816    	goto  PrimerNumero
0041    0010            		;Ingresamos el segundo numero
0042    0010    2828    	goto SegundoNumero
0043    0011    2852    	goto RealizarOperacion
0044    0012            	                      ;  delay
0045    0012            	                      ;  ingresamos el
0046    0012    2840    	goto SeleccionarOperacion
0047    0013            
0048    0013    2852    	goto RealizarOperacion
0049    0014            	                      ;  BTFSS ;si el port A en A0 es =1, salta una instruccion
0050    0014    1C05    	BTFSS PORTA,0
0051    0015            	                      ;  BTFSC ;si el port A en A0 es =0, salta una instruccion
0052    0015            
0053    0015    280F    	GOTO MENU
0054    0016            
0055    0016            PrimerNumero
0056    0016            ;ch e c k
0057    0016            	;BsF PORTA,0           ;  se simula la entrada de un numero para sumar
0058    0016            
0059    0016            	; BTFSC if PORTC[0] == 0 osea que no hay pulsacion
0060    0016            	; BTFSS if PORTC[0] == 1 osea que si hay pulsacion
0061    0016    1807    	BTFSc PORTC,0         ;  PORTA[0] == 0
0062    0017    2824    	goto  GuardarNum1
0063    0018            	                	;  SAVE TRUE
0064    0018            	                      ;  SAVE FALSE
0065    0018    1C87    	BTFSs PORTC,1         ;  PORTA[1] == 1
0066    0019    2816    	GOTO PrimerNumero     ;  FALSE, no se le suma recursivo
0067    001A            	                      ;  TRUE sumar
0068    001A    3001    	MOVLW 0x1
0069    001B    0786    	ADDWF PORTB,1
0070    001C    0806    	movf PORTB,W
0071    001D            
0072    001D            	;xorlw b'00010000'; pregunto si estan en 1111
0073    001D    1A06    	BTFSc PORTB,4
0074    001E    2821    	GOTO RestaurarNumero1
0075    001F            
0076    001F    2070    	call DELAYMACHINE
0077    0020            
0078    0020    2816    	GOTO PrimerNumero     ;  TRUE recursivo
0079    0021            
0080    0021            RestaurarNumero1
0081    0021    3000    	MOVLW b'00000000'
0082    0022    0086    	movwf PORTB
0083    0023    2816    	GOTO PrimerNumero
0084    0024            
0085    0024            GuardarNum1
0086    0024            
0087    0024    0806    	movf PORTB,W
0088    0025    00A1    	movwf NUMERO1
0089    0026    2070    	call DELAYMACHINE
0090    0027            
0091    0027    2828    	goto SegundoNumero
0092    0028            
0093    0028            
0094    0028            po
0095    0028            ;--------------------------------------------------------------------
0096    0028            
0097    0028            SegundoNumero
0098    0028            ;ch e c k
0099    0028            	;BsF PORTA,0           ;  se simula la entrada de un numero para sumar
0100    0028            
0101    0028    1807    	BTFSc PORTC,0         ;  PORTA[0] == 1
0102    0029    2835    	goto GuardarNum2
0103    002A            	                ;  SAVE TRUE
0104    002A            	                      ;  SAVE FALSE
0105    002A    1C87    	BTFSs PORTC,1         ;  PORTA[1] == 1
0106    002B    2828    	GOTO SegundoNumero     ;  FALSE, no se le suma recursivo
0107    002C            	                      ;  TRUE sumar
0108    002C    3010    	MOVLW 16
0109    002D    0786    	ADDWF PORTB,1
0110    002E    0806    	movf PORTB,W
0111    002F            
0112    002F            	;xorlw b'00010000'; pregunto si estan en 1111
0113    002F            	;BTFSc PORTB,4
0114    002F            	;GOTO RestaurarNumero2
0115    002F    2070    	call DELAYMACHINE
0116    0030            
0117    0030    2828    	GOTO SegundoNumero     ;  TRUE recursivo
0118    0031            
0119    0031            RestaurarNumero2
0120    0031    3021    	MOVLW NUMERO1 ;traemos el numero 1 intacto
0121    0032    0086    	movwf PORTB
0122    0033    2070    	call DELAYMACHINE
0123    0034    2828    	GOTO SegundoNumero
0124    0035            
0125    0035            GuardarNum2
0126    0035            ;puerto b - numero 1
0127    0035            	;movf NUMERO1,W
0128    0035    1A06    	BTFSC PORTB ,4
0129    0036    1422    	BSF NUMERO2,0
0130    0037    1A86    	BTFSC PORTB ,5
0131    0038    14A2    	BSF NUMERO2,1
0132    0039    1B06    	BTFSC PORTB ,6
0133    003A    1522    	BSF NUMERO2,2
0134    003B    1B86    	BTFSC PORTB ,7
0135    003C    15A2    	BSF NUMERO2,3
0136    003D    2070    	call DELAYMACHINE
0137    003E            
0138    003E    1408    	BSF PORTD, 0
0139    003F    2840    	goto SeleccionarOperacion
0140    0040            
0141    0040            ;--------------------------------------------------------------------------------
0142    0040            
0143    0040            ;*********************************************************************************
0144    0040            
0145    0040            SeleccionarOperacion
0146    0040            ;ch e c k
0147    0040            	;PArte 1
0148    0040            
0149    0040    1807    	BTFSc PORTC,0         ;  PORTA[0] == 1
0150    0041    284F    	goto GuardarOperacion
0151    0042            	                ;  SAVE TRUE
0152    0042            	                      ;  SAVE FALSE
0153    0042    1C87    	BTFSs PORTC,1         ;  PORTA[1] == 1
0154    0043    2840    	GOTO SeleccionarOperacion     ;  FALSE, no se le suma recursivo
0155    0044            	                      ;  TRUE sumar
0156    0044    3001    	MOVLW 1
0157    0045    0088    	movwf PORTD
0158    0046    2070    		call DELAYMACHINE
0159    0047            
0160    0047            
0161    0047            	;xorlw b'00000011'; pregunto si estan en 1111
0162    0047            SegundaParte
0163    0047    1807    	BTFSc PORTC,0         ;  PORTA[0] == 1
0164    0048    284F    	goto GuardarOperacion
0165    0049            	                ;  SAVE TRUE
0166    0049            	                      ;  SAVE FALSE
0167    0049    1C87    	BTFSs PORTC,1         ;  PORTA[1] == 1
0168    004A    2847    	GOTO SegundaParte     ;  FALSE, no se le suma recursivo
0169    004B            	                      ;  TRUE sumar
0170    004B    3002    	MOVLW 2
0171    004C    0088    	movwf PORTD
0172    004D            
0173    004D    2070    	call DELAYMACHINE
0174    004E            
0175    004E    2840    	GOTO SeleccionarOperacion     ;  TRUE recursivo
0176    004F            
0177    004F            GuardarOperacion
0178    004F            
0179    004F    0808    	movf PORTD,W
0180    0050    00A9    	movwf OPERACION
0181    0051    2852    	goto RealizarOperacion
0182    0052            
0183    0052            ;**********************************************************************************
0184    0052            
0185    0052            RealizarOperacion
0186    0052            
0187    0052            
0188    0052    1C08    	BTFSS PORTD,0 ; ir a suma
0189    0053    2863    	goto Restar ; resta
0190    0054    2856    	goto Sumar
0191    0055            
0192    0055    0008    	return
0193    0056            Sumar
0194    0056            
0195    0056    0821    	movf NUMERO1,W
0196    0057    0722    	ADDWF NUMERO2,0 ; w = portB - numero 1
0197    0058    00B1    	movwf RESULTADO
0198    0059            
0199    0059            	;PORTC[4]=RESULTADO[0]
0200    0059            
0201    0059            
0202    0059    1831    	BTFSc RESULTADO ,0
0203    005A    1607    	bsf PORTC,4
0204    005B            	;PORTC[5]=RESULTADO[1]
0205    005B            
0206    005B    18B1    	BTFSc RESULTADO ,1
0207    005C    1687    	bsf PORTC,5
0208    005D            
0209    005D            ;PORTC[6]=RESULTADO[2]
0210    005D            
0211    005D    1931    	BTFSc RESULTADO ,2
0212    005E    1707    	bsf PORTC,6
0213    005F            ;PORTC[7]=RESULTADO[3]
0214    005F    19B1    	BTFSc RESULTADO ,3
0215    0060    1787    	bsf PORTC,7
0216    0061    2070    	call DELAYMACHINE
0217    0062            
0218    0062    2871    	goto LoopFinal
0219    0063            Restar
0220    0063    0822    	movf NUMERO2,W
0221    0064    0221    	SUBWF NUMERO1,0 ; w = portB - numero 1
0222    0065    00B1    	movwf RESULTADO
0223    0066            
0224    0066            	;PORTC[4]=RESULTADO[0]
0225    0066            
0226    0066            
0227    0066    1831    	BTFSc RESULTADO ,0
0228    0067    1607    	bsf PORTC,4
0229    0068            	;PORTC[5]=RESULTADO[1]
0230    0068            
0231    0068    18B1    	BTFSc RESULTADO ,1
0232    0069    1687    	bsf PORTC,5
0233    006A            
0234    006A            ;PORTC[6]=RESULTADO[2]
0235    006A            
0236    006A    1931    	BTFSc RESULTADO ,2
0237    006B    1707    	bsf PORTC,6
0238    006C            ;PORTC[7]=RESULTADO[3]
0239    006C    19B1    	BTFSc RESULTADO ,3
0240    006D    1787    	bsf PORTC,7
0241    006E    2070    	call DELAYMACHINE
0242    006F            
0243    006F    2871    	goto LoopFinal
0244    0070            
0245    0070            DELAYMACHINE
0246    0070            	;CLRF	0X20
0247    0070            	;BSF	0X20, 6
0248    0070            	;BSF	0X20, 5
0249    0070            	;BSF	0X20, 2
0250    0070            	;CALL	DELAYMACHINE2
0251    0070    0008    	return
0252    0071            
0253    0071            DELAYMACHINE2
0254    0071            	;DECFSZ	0X20, 1
0255    0071            	;GOTO	DELAYMACHINE2
0256    0071            	;RETURN
0257    0071            
0258    0071            
0259    0071            LoopFinal
0260    0071            
0261    0071    1C87    	BTFSs PORTC,1         ;  PORTA[1] == 1
0262    0072    2871    	GOTO LoopFinal     ;  FALSE, no se le suma recursivo
0263    0073            
0264    0073    2801    	goto START
0265    0074            END
0266    0074            
0267    0074            ;pagina 64 pdf modulo 3
---------------------------------------------
Number of errors = 0
